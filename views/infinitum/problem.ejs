<link rel='stylesheet' href='/infinitum/stylesheets/problem.css'/>

<div id="inner-cell">
    <div class="contest-header">
        <div class="aparoksha-logo"></div>
        <div class="schedule-caption">  Infinitum, April 1  </div>
    </div>

    <div class="problem-container">
        <div class="sub-title"><p><%= problem.name %></p></div>

        <!--<p id="markdown-content">-->
            <!---->
        <!--</p>-->
        <div style="margin: 10px 20px" id="markdown-content"></div>

    </div>


    <div class="problem-container">
        <div class="sub-title">
            <p>SUBMIT</p>
        </div>

        <input id="answerText" type="text" placeholder="Enter your answer here.."
               style="padding-left: 5px;width: 200px; border: 1px solid rgb(200, 200, 200); margin: 20px; margin-bottom: 0; height: 40px; display: inline">

        <button type="button" class="play" style="float: none; width: 200px">Submit</button>
        <div style="clear: both"></div>
    </div>


</div>

<script>
    $('.play').click(function () {
        $.post("/receiveInfinitumSubmission",
                {
                    answer: $('#answerText').val(),
                    problemId: "<%= problem.id %>"
                },

                function (data, status) {
                    //console.log("Data: " + data + "\nStatus: " + status);
//                    alert(data);

                    if (JSON.parse(data).error) {
                        ohSnap(JSON.parse(data).error, {color: 'red'});
                    } else if (status == "success") {
                        var problemId = parseInt(gup('id', window.location.href)) + 1;

                        if (problemId > 30) {
                            problemId = 1;
                        }

                        window.location.href = updateURLParameter(window.location.href, 'id', '' + problemId);
//                        ohSnap(JSON.parse(data).success, {color: 'green'});
                    }
                });

        //$('.play').prop('disabled', true).css("opacity", "0.5");
    });

    function gup(name, url) {
        if (!url) url = location.href;
        name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(url);
        return results == null ? null : results[1];
    }

    function updateURLParameter(url, param, paramVal) {
        var TheAnchor = null;
        var newAdditionalURL = "";
        var tempArray = url.split("?");
        var baseURL = tempArray[0];
        var additionalURL = tempArray[1];
        var temp = "";

        if (additionalURL) {
            var tmpAnchor = additionalURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor = tmpAnchor[1];
            if (TheAnchor)
                additionalURL = TheParams;

            tempArray = additionalURL.split("&");

            for (i = 0; i < tempArray.length; i++) {
                if (tempArray[i].split('=')[0] != param) {
                    newAdditionalURL += temp + tempArray[i];
                    temp = "&";
                }
            }
        }
        else {
            var tmpAnchor = baseURL.split("#");
            var TheParams = tmpAnchor[0];
            TheAnchor = tmpAnchor[1];

            if (TheParams)
                baseURL = TheParams;
        }

        if (TheAnchor)
            paramVal += "#" + TheAnchor;

        var rows_txt = temp + "" + param + "=" + paramVal;
        return baseURL + "?" + newAdditionalURL + rows_txt;
    }
</script>
<script src="/plugins/showdown.min.js"></script>
<script>
    var converter = new showdown.Converter(),

            text = <%- JSON.stringify(problem.statement) %>,

            html = converter.makeHtml(text);

    $('#markdown-content').html(html);
</script>